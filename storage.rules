rules_version = '2';

service firebase.storage {
  match /b/{bucket}/o {
    // Base function to check if user is authenticated
    function isAuthenticated() {
      return request.auth != null;
    }
    
    // Function to check if the file is a valid video
    function isValidVideo() {
      return request.resource.contentType.matches('video/.*')
        && request.resource.size < 100 * 1024 * 1024; // 100MB max
    }
    
    // Function to check if user owns the file
    function isOwner(userId) {
      return request.auth.uid == userId;
    }
    
    // Profile images rules - More permissive for debugging
    match /profile_images/{filename} {
      allow read: if true;  // Anyone can view profile photos
      allow create, update, delete: if isAuthenticated();  // Temporarily more permissive for debugging
    }
    
    // Videos folder rules - Temporarily more permissive for debugging
    match /videos/{videoId} {
      // Allow read for authenticated users
      allow read: if isAuthenticated();
      
      // Temporarily allow all authenticated users to upload
      allow write, create, update: if isAuthenticated()
                                  && isValidVideo();
      
      // Allow delete only if user owns the video
      allow delete: if isAuthenticated()
                   && videoId.matches(request.auth.uid + '_.*');
    }
    
    // Default deny
    match /{allPaths=**} {
      allow read, write: if false;
    }
  }
}